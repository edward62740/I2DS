{"html":"\n      <article>\n        <p class=\"banner\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689\" target=\"_blank\" title=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689\">Open in Browser<\/a><\/p><div class=\"header\">\n  \n  <div class=\"headertitle\">\n  <h1 class=\"title\">ICM20689 - Motion Sensor<\/h1><\/div>\n<\/div><!--header-->\n<div class=\"contents\">\n<a name=\"details\" id=\"details\"><\/a><h2 class=\"groupheader\">Description<\/h2>\n<p>Driver for the Invensense ICM20689 6-axis motion sensor. <\/p>\n<table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"groups\"><\/a>\nModules<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemRight\" valign=\"bottom\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689-details\" class=\"\" target=\"_blank\">Register definitions<\/a><\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescRight\">Register definitions. <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table><table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"func-members\"><\/a>\nFunctions<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gabcdfcd78675d6d83f5313431b2e27564\" class=\"el\">sl_icm20689_spi_init<\/a> (void)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Initialize the SPI bus to communicate with the ICM20689.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaf17077b483f4ec0a7ab782663bd96661\" class=\"el\">sl_icm20689_deinit<\/a> (void)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">De-initialize the ICM20689 sensor.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gadfe7158902fe3639a5f9edac54752904\" class=\"el\">sl_icm20689_read_register<\/a> (uint8_t addr, int num_bytes, uint8_t *data)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read register from the ICM20689 device.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga4efdcd93cb18ee266aad9ded742b3215\" class=\"el\">sl_icm20689_write_register<\/a> (uint8_t addr, uint8_t data)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Write a register in the ICM20689 device.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga56282af44ebbc8f2a5994721e9769377\" class=\"el\">sl_icm20689_reset<\/a> (void)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Perform soft reset on the ICM20689 chip.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">float&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaa6231c2e25703e007d7970f1b812b8d7\" class=\"el\">sl_icm20689_set_sample_rate<\/a> (float sample_rate)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the sample rate both of the accelerometer and the gyroscope.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga46e5b83f5fcc3c9ad39b76ceab318fb0\" class=\"el\">sl_icm20689_init<\/a> (void)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Initialize the ICM20689 sensor.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaa68af02fd8e97d165bde65e159449c5f\" class=\"el\">sl_icm20689_gyro_set_bandwidth<\/a> (<a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689-details#ga4711b7ed2117adccc7bda971ede74dfa\" class=\"el\" target=\"_blank\">sl_gyro_bandwidth_t<\/a> gyro_bandwidth)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the bandwidth of the gyroscope.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaf7befc1c6c22aec15baa5608a8e5ce50\" class=\"el\">sl_icm20689_accel_set_bandwidth<\/a> (<a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689-details#ga169d6fd8a7abb777416d157b1ecc0ad6\" class=\"el\" target=\"_blank\">sl_accel_bandwidth_t<\/a> accel_bandwidth)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the bandwidth of the accelerometer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gae3bd0b2bba44d85d65a034c053e70705\" class=\"el\">sl_icm20689_accel_read_data<\/a> (float accel[3])<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read the raw acceleration value and convert to g value based on the actual resolution.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaf4dd8ccecd9de2f0be7b374ec43c78db\" class=\"el\">sl_icm20689_gyro_read_data<\/a> (float gyro[3])<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read the raw gyroscope value and convert to deg/sec value based on the actual resolution.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga3c785740f88329f9b01a29898e4848c1\" class=\"el\">sl_icm20689_accel_get_resolution<\/a> (float *accel_res)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Get the actual resolution of the accelerometer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaa1cd1ce5bdd766fc7deafd260f270c05\" class=\"el\">sl_icm20689_gyro_get_resolution<\/a> (float *gyro_res)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Get the actual resolution of the gyroscope.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga8567e106ed08fe562403828545d3d84d\" class=\"el\">sl_icm20689_accel_set_full_scale<\/a> (<a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689-details#ga77cf845b33d98eca1a7ffe92bcdf5e79\" class=\"el\" target=\"_blank\">sl_accel_full_scale_t<\/a> accel_fs)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the full scale value of the accelerometer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga2796d75226bdf2219eaa7d9030bb20d2\" class=\"el\">sl_icm20689_gyro_set_full_scale<\/a> (<a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689-details#ga58a215b17384e7b678b383fa68380410\" class=\"el\" target=\"_blank\">sl_gyro_full_scale_t<\/a> gyro_fs)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the full scale value of the gyroscope.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga5e0946b95bbea79f23a3a5600cc0c49b\" class=\"el\">sl_icm20689_enable_sleep_mode<\/a> (bool enable)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Enable or disable the sleep mode of the device.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gafe6aede061879d74da049ee249cd54c4\" class=\"el\">sl_icm20689_enable_sensor<\/a> (bool accel, bool gyro, bool temp)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Enable or disable the sensors in the ICM20689 chip.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga460880e976eea79cfb69e4b34bc52738\" class=\"el\">sl_icm20689_enable_interrupt<\/a> (bool data_ready_enable, bool wom_enable)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Enable or disable the interrupts in the ICM20689 chip.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga3695fce1d0100e5fab8f0adb28db31a5\" class=\"el\">sl_icm20689_read_interrupt_status<\/a> (uint32_t *int_status)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read the interrupt status registers of the ICM20689 chip.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gab1021fcc83869f18c07b98c786a29f6c\" class=\"el\">sl_icm20689_is_data_ready<\/a> (void)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Check if new data is available to read.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga9cb0a3aac8d61eb63fddeb1ddd80fac7\" class=\"el\">sl_icm20689_calibrate_accel_and_gyro<\/a> (float *accel_bias_scaled, float *gyro_bias_scaled)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Accelerometer and gyroscope calibration function.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga142e23014a00dfa8103b19079d3ac58d\" class=\"el\">sl_icm20689_calibrate_gyro<\/a> (float *gyro_bias_scaled)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Gyroscope calibration function.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gafd5f001a0cfb8dcdc3863814436ec1b7\" class=\"el\">sl_icm20689_read_temperature_data<\/a> (float *temperature)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read the temperature sensor raw value and convert to Celsius.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga00ffee47b04d8b9e265c552de2fb449d\" class=\"el\">sl_icm20689_get_device_id<\/a> (uint8_t *dev_id)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read the device ID of the ICM20689.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table>\n<h2 class=\"groupheader\">Function Documentation<\/h2>\n<a id=\"gabcdfcd78675d6d83f5313431b2e27564\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gabcdfcd78675d6d83f5313431b2e27564\">◆&nbsp;<\/a><\/span>sl_icm20689_spi_init()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_spi_init <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">void&nbsp;<\/td>\n          <td class=\"paramname\"><code><\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Initialize the SPI bus to communicate with the ICM20689. <\/p>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaf17077b483f4ec0a7ab782663bd96661\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaf17077b483f4ec0a7ab782663bd96661\">◆&nbsp;<\/a><\/span>sl_icm20689_deinit()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_deinit <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">void&nbsp;<\/td>\n          <td class=\"paramname\"><code><\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>De-initialize the ICM20689 sensor. <\/p>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gadfe7158902fe3639a5f9edac54752904\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gadfe7158902fe3639a5f9edac54752904\">◆&nbsp;<\/a><\/span>sl_icm20689_read_register()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_read_register <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>addr, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>num_bytes, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint8_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>data&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read register from the ICM20689 device. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>addr<\/code><\/td><td>The register address to read from in the sensor Bit[7:0] - register address<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>num_bytes<\/code><\/td><td>The number of bytes to read<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>data<\/code><\/td><td>The data read from the register<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga4efdcd93cb18ee266aad9ded742b3215\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga4efdcd93cb18ee266aad9ded742b3215\">◆&nbsp;<\/a><\/span>sl_icm20689_write_register()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_write_register <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>addr, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>data&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Write a register in the ICM20689 device. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>addr<\/code><\/td><td>The register address to write Bit[7:0] - register address<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>data<\/code><\/td><td>The data to write to the register<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga56282af44ebbc8f2a5994721e9769377\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga56282af44ebbc8f2a5994721e9769377\">◆&nbsp;<\/a><\/span>sl_icm20689_reset()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_reset <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">void&nbsp;<\/td>\n          <td class=\"paramname\"><code><\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Perform soft reset on the ICM20689 chip. <\/p>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaa6231c2e25703e007d7970f1b812b8d7\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaa6231c2e25703e007d7970f1b812b8d7\">◆&nbsp;<\/a><\/span>sl_icm20689_set_sample_rate()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">float sl_icm20689_set_sample_rate <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float&nbsp;<\/td>\n          <td class=\"paramname\"><code>sample_rate<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the sample rate both of the accelerometer and the gyroscope. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>sample_rate<\/code><\/td><td>The desired sample rate in Hz.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>The actual sample rate, which may be different than the desired value because of the finite and discrete number of divider settings. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga46e5b83f5fcc3c9ad39b76ceab318fb0\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga46e5b83f5fcc3c9ad39b76ceab318fb0\">◆&nbsp;<\/a><\/span>sl_icm20689_init()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_init <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">void&nbsp;<\/td>\n          <td class=\"paramname\"><code><\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Initialize the ICM20689 sensor. <\/p>\n<p>Enable the power supply and SPI lines, set up the host SPI controller, configure the chip control interface, clock generator, and interrupt line.<\/p>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaa68af02fd8e97d165bde65e159449c5f\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaa68af02fd8e97d165bde65e159449c5f\">◆&nbsp;<\/a><\/span>sl_icm20689_gyro_set_bandwidth()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_gyro_set_bandwidth <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689-details#ga4711b7ed2117adccc7bda971ede74dfa\" class=\"el\" target=\"_blank\">sl_gyro_bandwidth_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyro_bandwidth<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the bandwidth of the gyroscope. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>gyro_bandwidth<\/code><\/td><td>The desired bandwidth value. Use the sl_gyro_bandwidth_t enum, which are defined in the icm20689.h file. The value of x can be 5Hz, 10Hz, 20Hz, 41Hz, 92Hz, 176Hz, 250Hz, 3281Hz or 8173Hz with or without digital low pass filter(DLPF).<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaf7befc1c6c22aec15baa5608a8e5ce50\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaf7befc1c6c22aec15baa5608a8e5ce50\">◆&nbsp;<\/a><\/span>sl_icm20689_accel_set_bandwidth()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_accel_set_bandwidth <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689-details#ga169d6fd8a7abb777416d157b1ecc0ad6\" class=\"el\" target=\"_blank\">sl_accel_bandwidth_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>accel_bandwidth<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the bandwidth of the accelerometer. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>accel_bandwidth<\/code><\/td><td>The desired bandwidth value. Use the sl_accel_bandwidth_t enum, which are defined in the icm20689.h file. The value of y can be 5.1Hz, 10.2Hz, 21.2Hz, 44.8Hz, 99Hz, 218.1Hz(0), 218.1Hz(1), 420Hz or 1046Hz. 1046Hz is the only value without digital low pass filter.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gae3bd0b2bba44d85d65a034c053e70705\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gae3bd0b2bba44d85d65a034c053e70705\">◆&nbsp;<\/a><\/span>sl_icm20689_accel_read_data()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_accel_read_data <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float&nbsp;<\/td>\n          <td class=\"paramname\"><code>accel[3]<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read the raw acceleration value and convert to g value based on the actual resolution. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>accel<\/code><\/td><td>A 3-element array of float numbers containing the acceleration values for the x, y and z axes in g units.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaf4dd8ccecd9de2f0be7b374ec43c78db\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaf4dd8ccecd9de2f0be7b374ec43c78db\">◆&nbsp;<\/a><\/span>sl_icm20689_gyro_read_data()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_gyro_read_data <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyro[3]<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read the raw gyroscope value and convert to deg/sec value based on the actual resolution. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>gyro<\/code><\/td><td>A 3-element array of float numbers containing the gyroscope values for the x, y and z axes in deg/sec units.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga3c785740f88329f9b01a29898e4848c1\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga3c785740f88329f9b01a29898e4848c1\">◆&nbsp;<\/a><\/span>sl_icm20689_accel_get_resolution()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_accel_get_resolution <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>accel_res<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Get the actual resolution of the accelerometer. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>accel_res<\/code><\/td><td>The resolution in g/bit units<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaa1cd1ce5bdd766fc7deafd260f270c05\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaa1cd1ce5bdd766fc7deafd260f270c05\">◆&nbsp;<\/a><\/span>sl_icm20689_gyro_get_resolution()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_gyro_get_resolution <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyro_res<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Get the actual resolution of the gyroscope. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>gyro_res<\/code><\/td><td>The actual resolution in (deg/sec)/bit units<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga8567e106ed08fe562403828545d3d84d\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga8567e106ed08fe562403828545d3d84d\">◆&nbsp;<\/a><\/span>sl_icm20689_accel_set_full_scale()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_accel_set_full_scale <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689-details#ga77cf845b33d98eca1a7ffe92bcdf5e79\" class=\"el\" target=\"_blank\">sl_accel_full_scale_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>accel_fs<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the full scale value of the accelerometer. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>accel_fs<\/code><\/td><td>The desired full scale value. The value of x can be 2, 4, 8 or 16.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga2796d75226bdf2219eaa7d9030bb20d2\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga2796d75226bdf2219eaa7d9030bb20d2\">◆&nbsp;<\/a><\/span>sl_icm20689_gyro_set_full_scale()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_gyro_set_full_scale <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689-details#ga58a215b17384e7b678b383fa68380410\" class=\"el\" target=\"_blank\">sl_gyro_full_scale_t<\/a>&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyro_fs<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the full scale value of the gyroscope. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>gyro_fs<\/code><\/td><td>The desired full scale value. The value of y can be 250, 500, 1000 or 2000.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga5e0946b95bbea79f23a3a5600cc0c49b\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga5e0946b95bbea79f23a3a5600cc0c49b\">◆&nbsp;<\/a><\/span>sl_icm20689_enable_sleep_mode()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_enable_sleep_mode <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>enable<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Enable or disable the sleep mode of the device. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>enable<\/code><\/td><td>If true, sleep mode is enabled. Set to false to disable sleep mode.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gafe6aede061879d74da049ee249cd54c4\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gafe6aede061879d74da049ee249cd54c4\">◆&nbsp;<\/a><\/span>sl_icm20689_enable_sensor()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_enable_sensor <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>accel, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyro, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>temp&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Enable or disable the sensors in the ICM20689 chip. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>accel<\/code><\/td><td>If true, enables the acceleration sensor<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>gyro<\/code><\/td><td>If true, enables the gyroscope sensor<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>temp<\/code><\/td><td>If true, enables the temperature sensor<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga460880e976eea79cfb69e4b34bc52738\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga460880e976eea79cfb69e4b34bc52738\">◆&nbsp;<\/a><\/span>sl_icm20689_enable_interrupt()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_enable_interrupt <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>data_ready_enable, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>wom_enable&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Enable or disable the interrupts in the ICM20689 chip. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>data_ready_enable<\/code><\/td><td>If true, enables the Raw Data Ready interrupt, otherwise disables.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>wom_enable<\/code><\/td><td>If true, enables the Wake-up On Motion interrupt, otherwise disables.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga3695fce1d0100e5fab8f0adb28db31a5\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga3695fce1d0100e5fab8f0adb28db31a5\">◆&nbsp;<\/a><\/span>sl_icm20689_read_interrupt_status()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_read_interrupt_status <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint32_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>int_status<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read the interrupt status registers of the ICM20689 chip. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>int_status<\/code><\/td><td>The content the four interrupt registers. LSByte is INT_STATUS, MSByte is INT_STATUS_3<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gab1021fcc83869f18c07b98c786a29f6c\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gab1021fcc83869f18c07b98c786a29f6c\">◆&nbsp;<\/a><\/span>sl_icm20689_is_data_ready()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">bool sl_icm20689_is_data_ready <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">void&nbsp;<\/td>\n          <td class=\"paramname\"><code><\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Check if new data is available to read. <\/p>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns true if the Raw Data Ready interrupt bit set, false otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga9cb0a3aac8d61eb63fddeb1ddd80fac7\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga9cb0a3aac8d61eb63fddeb1ddd80fac7\">◆&nbsp;<\/a><\/span>sl_icm20689_calibrate_accel_and_gyro()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_calibrate_accel_and_gyro <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>accel_bias_scaled, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyro_bias_scaled&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Accelerometer and gyroscope calibration function. <\/p>\n<p>Reads the gyroscope and accelerometer values while the device is at rest and in level. The resulting values are loaded to the accel and gyro bias registers to cancel the static offset error.<\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>accel_bias_scaled<\/code><\/td><td>The mesured acceleration sensor bias in mg<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>gyro_bias_scaled<\/code><\/td><td>The mesured gyro sensor bias in deg/sec<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga142e23014a00dfa8103b19079d3ac58d\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga142e23014a00dfa8103b19079d3ac58d\">◆&nbsp;<\/a><\/span>sl_icm20689_calibrate_gyro()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_calibrate_gyro <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyro_bias_scaled<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Gyroscope calibration function. <\/p>\n<p>Read the gyroscope values while the device is at rest and in level. The resulting values are loaded to the gyro bias registers to cancel the static offset error.<\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>gyro_bias_scaled<\/code><\/td><td>The mesured gyro sensor bias in deg/sec<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gafd5f001a0cfb8dcdc3863814436ec1b7\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gafd5f001a0cfb8dcdc3863814436ec1b7\">◆&nbsp;<\/a><\/span>sl_icm20689_read_temperature_data()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_read_temperature_data <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>temperature<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read the temperature sensor raw value and convert to Celsius. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>temperature<\/code><\/td><td>The mesured temperature in Celsius<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga00ffee47b04d8b9e265c552de2fb449d\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga00ffee47b04d8b9e265c552de2fb449d\">◆&nbsp;<\/a><\/span>sl_icm20689_get_device_id()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20689_get_device_id <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint8_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>dev_id<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read the device ID of the ICM20689. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>dev_id<\/code><\/td><td>The ID of the device read from the WHO_AM_I register. Expected value 0x98.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<\/div>\n      <div ub-in-page=\"6062051aebaf71079a7b414b\"><\/div>\n      <\/article>\n    ","url":"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20689","status":"success"}
