{"html":"\n      <article>\n        <p class=\"banner\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20648\" target=\"_blank\" title=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20648\">Open in Browser<\/a><\/p><div class=\"header\">\n  \n  <div class=\"headertitle\">\n  <h1 class=\"title\">ICM20648 - Motion Sensor<\/h1><\/div>\n<\/div><!--header-->\n<div class=\"contents\">\n<a name=\"details\" id=\"details\"><\/a><h2 class=\"groupheader\">Description<\/h2>\n<p>Driver for the Invensense ICM20648 6-axis motion sensor. <\/p>\n<table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"groups\"><\/a>\nModules<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemRight\" valign=\"bottom\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20648-details\" class=\"\" target=\"_blank\">Register definitions<\/a><\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescRight\">Register definitions. <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table><table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"func-members\"><\/a>\nFunctions<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga230c9bb7a96cffe1f8b5eb891b1de95c\" class=\"el\">sl_icm20648_spi_init<\/a> (void)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Initialize the SPI bus to communicate with the ICM20648.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga62fa491b745acf1333fa100febd5b83d\" class=\"el\">sl_icm20648_read_register<\/a> (uint16_t addr, int numBytes, uint8_t *data)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read register from the ICM20648 device.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaea94737d5d6131914c522c8f1417c67c\" class=\"el\">sl_icm20648_write_register<\/a> (uint16_t addr, uint8_t data)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Write a register in the ICM20648 device.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga37bffa6b6e55e1d608157c95e89f7ee0\" class=\"el\">sl_icm20648_select_register_bank<\/a> (uint8_t bank)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Select the desired register bank.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaced9d3ee96aa8dca531a215c75a7ab39\" class=\"el\">sl_icm20648_reset<\/a> (void)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Perform soft reset on the ICM20648 chip.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga2e8bf9e009f3168fadbafa359f29fae1\" class=\"el\">sl_icm20648_set_sample_rate<\/a> (float sampleRate)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the sample rate both of the accelerometer and the gyroscope.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">float&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga3de3b7c9c92df3f2ecfa057e0142d8a3\" class=\"el\">sl_icm20648_gyro_set_sample_rate<\/a> (float sampleRate)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the sample rate of the accelerometer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">float&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga20cdd084cf8eb94bf587be78e61ff72a\" class=\"el\">sl_icm20648_accel_set_sample_rate<\/a> (float sampleRate)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the sample rate of the gyroscope.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga03ba037b663d2dea77f409811a2dd8c8\" class=\"el\">sl_icm20648_gyro_set_bandwidth<\/a> (uint8_t gyroBw)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the bandwidth of the gyroscope.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gada89e5b846fb26a5314605e157e901ff\" class=\"el\">sl_icm20648_accel_set_bandwidth<\/a> (uint8_t accelBw)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the bandwidth of the accelerometer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga3a2eeb224c2115867bec0c9c9ecfaab9\" class=\"el\">sl_icm20648_accel_read_data<\/a> (float *accel)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read the raw acceleration value and convert to g value based on the actual resolution.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gab8add575e9a9acdabc617f88db252b04\" class=\"el\">sl_icm20648_gyro_read_data<\/a> (float *gyro)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read the raw gyroscope value and convert to deg/sec value based on the actual resolution.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gac1b6b9971abe60ef1f441d81d7db7bc7\" class=\"el\">sl_icm20648_accel_get_resolution<\/a> (float *accelRes)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Get the actual resolution of the accelerometer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaeb8a972db6c889aea4480dd3066c5f8e\" class=\"el\">sl_icm20648_gyro_get_resolution<\/a> (float *gyroRes)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Get the actual resolution of the gyroscope.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gab422da02edf52cc82b20d8909f112436\" class=\"el\">sl_icm20648_accel_set_full_scale<\/a> (uint8_t accelFs)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the full scale value of the accelerometer.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga11bc15e9c43674b689ec38615869ba9a\" class=\"el\">sl_icm20648_gyro_set_full_scale<\/a> (uint8_t gyroFs)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the full scale value of the gyroscope.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga6ac5f48cfeaecad406a23e2969f1719f\" class=\"el\">sl_icm20648_enable_sleep_mode<\/a> (bool enable)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Enable or disable the sleep mode of the device.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga4fc19734463d58a3522ee6d05e3b41cc\" class=\"el\">sl_icm20648_enable_cycle_mode<\/a> (bool enable)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Enable or disable the cycle mode operation of the accel and gyro.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga460c01f5f05dc19a5fd592860268e0f6\" class=\"el\">sl_icm20648_enable_sensor<\/a> (bool accel, bool gyro, bool temp)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Enable or disable the sensors in the ICM20648 chip.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga418be22e98b17eb7e213e92848415cee\" class=\"el\">sl_icm20648_enter_low_power_mode<\/a> (bool enAccel, bool enGyro, bool enTemp)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Enable or disable sensors in low-power mode in the ICM20648 chip.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga9de38d49d802f680b8cc30ef1184283a\" class=\"el\">sl_icm20648_enable_interrupt<\/a> (bool dataReadyEnable, bool womEnable)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Enable or disable the interrupts in the ICM20648 chip.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga53c01d5e4ac50499a5183376fc6ffbbc\" class=\"el\">sl_icm20648_read_interrupt_status<\/a> (uint32_t *int_status)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read the interrupt status registers of the ICM20648 chip.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga77a359a6c031569a996fe3806e106be4\" class=\"el\">sl_icm20648_is_data_ready<\/a> (void)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Check if new data is available to read.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaa9cf1c5a0182afa3977ef3172810a863\" class=\"el\">sl_icm20648_enable_wake_on_motion_interrupt<\/a> (bool enable, uint8_t womThreshold, float sampleRate)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set up and enable the Wake-up On Motion feature.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gab7e4a09dfc0810915d7cefc924cab9ad\" class=\"el\">sl_icm20648_init<\/a> (void)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Initialize the ICM20648 sensor.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gadcc90f1950f624f974dd26dfa5d539e9\" class=\"el\">sl_icm20648_deinit<\/a> (void)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">De-initialize the ICM20648 sensor by disconnecting the supply and SPI lines.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga1902e16546e684356d21196b1181e41d\" class=\"el\">sl_icm20648_calibrate_accel_and_gyro<\/a> (float *accelBiasScaled, float *gyroBiasScaled)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Accelerometer and gyroscope calibration function.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaae92c4a2d4c2b34c690b266770f4fea2\" class=\"el\">sl_icm20648_calibrate_gyro<\/a> (float *gyroBiasScaled)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Gyroscope calibration function.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gace368e8ee1fb2efd9f5e850b57470668\" class=\"el\">sl_icm20648_read_temperature_data<\/a> (float *temperature)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read the temperature sensor raw value and convert to Celsius.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaeb7c4a0a835dcb1a769bd386eb9c5377\" class=\"el\">sl_icm20648_get_device_id<\/a> (uint8_t *devID)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read the device ID of the ICM20648.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table>\n<h2 class=\"groupheader\">Function Documentation<\/h2>\n<a id=\"ga230c9bb7a96cffe1f8b5eb891b1de95c\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga230c9bb7a96cffe1f8b5eb891b1de95c\">◆&nbsp;<\/a><\/span>sl_icm20648_spi_init()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_spi_init <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">void&nbsp;<\/td>\n          <td class=\"paramname\"><code><\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Initialize the SPI bus to communicate with the ICM20648. <\/p>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga62fa491b745acf1333fa100febd5b83d\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga62fa491b745acf1333fa100febd5b83d\">◆&nbsp;<\/a><\/span>sl_icm20648_read_register()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">void sl_icm20648_read_register <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint16_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>addr, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int&nbsp;<\/td>\n          <td class=\"paramname\"><code>numBytes, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint8_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>data&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read register from the ICM20648 device. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>addr<\/code><\/td><td>The register address to read from in the sensor Bit[8:7] - bank address Bit[6:0] - register address<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>numBytes<\/code><\/td><td>The number of bytes to read<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>data<\/code><\/td><td>The data read from the register <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaea94737d5d6131914c522c8f1417c67c\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaea94737d5d6131914c522c8f1417c67c\">◆&nbsp;<\/a><\/span>sl_icm20648_write_register()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">void sl_icm20648_write_register <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint16_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>addr, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>data&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Write a register in the ICM20648 device. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>addr<\/code><\/td><td>The register address to write Bit[8:7] - bank address Bit[6:0] - register address<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>data<\/code><\/td><td>The data to write to the register <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga37bffa6b6e55e1d608157c95e89f7ee0\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga37bffa6b6e55e1d608157c95e89f7ee0\">◆&nbsp;<\/a><\/span>sl_icm20648_select_register_bank()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">void sl_icm20648_select_register_bank <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>bank<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Select the desired register bank. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>bank<\/code><\/td><td>The address of the register bank (0..3) <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaced9d3ee96aa8dca531a215c75a7ab39\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaced9d3ee96aa8dca531a215c75a7ab39\">◆&nbsp;<\/a><\/span>sl_icm20648_reset()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_reset <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">void&nbsp;<\/td>\n          <td class=\"paramname\"><code><\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Perform soft reset on the ICM20648 chip. <\/p>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga2e8bf9e009f3168fadbafa359f29fae1\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga2e8bf9e009f3168fadbafa359f29fae1\">◆&nbsp;<\/a><\/span>sl_icm20648_set_sample_rate()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_set_sample_rate <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float&nbsp;<\/td>\n          <td class=\"paramname\"><code>sampleRate<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the sample rate both of the accelerometer and the gyroscope. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>sampleRate<\/code><\/td><td>The desired sample rate in Hz. Because the resolution of the sample rate divider is different in the accel and gyro stages, two sensors may have a different sample rate set.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga3de3b7c9c92df3f2ecfa057e0142d8a3\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga3de3b7c9c92df3f2ecfa057e0142d8a3\">◆&nbsp;<\/a><\/span>sl_icm20648_gyro_set_sample_rate()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">float sl_icm20648_gyro_set_sample_rate <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float&nbsp;<\/td>\n          <td class=\"paramname\"><code>sampleRate<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the sample rate of the accelerometer. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>sampleRate<\/code><\/td><td>The desired sample rate in Hz<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>The actual sample rate, which may be different than the desired value because of the finite and discrete number of divider settings. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga20cdd084cf8eb94bf587be78e61ff72a\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga20cdd084cf8eb94bf587be78e61ff72a\">◆&nbsp;<\/a><\/span>sl_icm20648_accel_set_sample_rate()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">float sl_icm20648_accel_set_sample_rate <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float&nbsp;<\/td>\n          <td class=\"paramname\"><code>sampleRate<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the sample rate of the gyroscope. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>sampleRate<\/code><\/td><td>The desired sample rate in Hz<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>The actual sample rate, which may be different than the desired value because of the finite and discrete number of divider settings. <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga03ba037b663d2dea77f409811a2dd8c8\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga03ba037b663d2dea77f409811a2dd8c8\">◆&nbsp;<\/a><\/span>sl_icm20648_gyro_set_bandwidth()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_gyro_set_bandwidth <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyroBw<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the bandwidth of the gyroscope. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>gyroBw<\/code><\/td><td>The desired bandwidth value. Use the ICM20648_GYRO_BW_xHZ macros, which are defined in the icm20648.h file. The value of x can be 6, 12, 24, 51, 120, 150, 200, 360 or 12100.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gada89e5b846fb26a5314605e157e901ff\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gada89e5b846fb26a5314605e157e901ff\">◆&nbsp;<\/a><\/span>sl_icm20648_accel_set_bandwidth()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_accel_set_bandwidth <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>accelBw<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the bandwidth of the accelerometer. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>accelBw<\/code><\/td><td>The desired bandwidth value. Use the ICM20648_ACCEL_BW_yHZ macros, which are defined in the icm20648.h file. The value of y can be 6, 12, 24, 50, 111, 246, 470 or 1210.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga3a2eeb224c2115867bec0c9c9ecfaab9\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga3a2eeb224c2115867bec0c9c9ecfaab9\">◆&nbsp;<\/a><\/span>sl_icm20648_accel_read_data()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_accel_read_data <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>accel<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read the raw acceleration value and convert to g value based on the actual resolution. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>accel<\/code><\/td><td>A 3-element array of float numbers containing the acceleration values for the x, y and z axes in g units.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gab8add575e9a9acdabc617f88db252b04\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gab8add575e9a9acdabc617f88db252b04\">◆&nbsp;<\/a><\/span>sl_icm20648_gyro_read_data()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_gyro_read_data <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyro<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read the raw gyroscope value and convert to deg/sec value based on the actual resolution. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>gyro<\/code><\/td><td>A 3-element array of float numbers containing the gyroscope values for the x, y and z axes in deg/sec units.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gac1b6b9971abe60ef1f441d81d7db7bc7\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gac1b6b9971abe60ef1f441d81d7db7bc7\">◆&nbsp;<\/a><\/span>sl_icm20648_accel_get_resolution()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_accel_get_resolution <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>accelRes<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Get the actual resolution of the accelerometer. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>accelRes<\/code><\/td><td>The resolution in g/bit units<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaeb8a972db6c889aea4480dd3066c5f8e\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaeb8a972db6c889aea4480dd3066c5f8e\">◆&nbsp;<\/a><\/span>sl_icm20648_gyro_get_resolution()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_gyro_get_resolution <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyroRes<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Get the actual resolution of the gyroscope. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>gyroRes<\/code><\/td><td>The actual resolution in (deg/sec)/bit units<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gab422da02edf52cc82b20d8909f112436\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gab422da02edf52cc82b20d8909f112436\">◆&nbsp;<\/a><\/span>sl_icm20648_accel_set_full_scale()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_accel_set_full_scale <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>accelFs<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the full scale value of the accelerometer. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>accelFs<\/code><\/td><td>The desired full scale value. Use the ICM20648_ACCEL_FULLSCALE_xG macros, which are defined in the icm20648.h file. The value of x can be 2, 4, 8 or 16.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga11bc15e9c43674b689ec38615869ba9a\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga11bc15e9c43674b689ec38615869ba9a\">◆&nbsp;<\/a><\/span>sl_icm20648_gyro_set_full_scale()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_gyro_set_full_scale <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyroFs<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the full scale value of the gyroscope. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>gyroFs<\/code><\/td><td>The desired full scale value. Use the ICM20648_GYRO_FULLSCALE_yDPS macros, which are defined in the icm20648.h file. The value of y can be 250, 500, 1000 or 2000.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga6ac5f48cfeaecad406a23e2969f1719f\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga6ac5f48cfeaecad406a23e2969f1719f\">◆&nbsp;<\/a><\/span>sl_icm20648_enable_sleep_mode()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_enable_sleep_mode <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>enable<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Enable or disable the sleep mode of the device. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>enable<\/code><\/td><td>If true, sleep mode is enabled. Set to false to disable sleep mode.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga4fc19734463d58a3522ee6d05e3b41cc\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga4fc19734463d58a3522ee6d05e3b41cc\">◆&nbsp;<\/a><\/span>sl_icm20648_enable_cycle_mode()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_enable_cycle_mode <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>enable<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Enable or disable the cycle mode operation of the accel and gyro. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>enable<\/code><\/td><td>If true both the accel and gyro sensors will operate in cycle mode. If false the senors working in continuous mode.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga460c01f5f05dc19a5fd592860268e0f6\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga460c01f5f05dc19a5fd592860268e0f6\">◆&nbsp;<\/a><\/span>sl_icm20648_enable_sensor()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_enable_sensor <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>accel, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyro, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>temp&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Enable or disable the sensors in the ICM20648 chip. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>accel<\/code><\/td><td>If true, enables the acceleration sensor<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>gyro<\/code><\/td><td>If true, enables the gyroscope sensor<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>temp<\/code><\/td><td>If true, enables the temperature sensor<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga418be22e98b17eb7e213e92848415cee\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga418be22e98b17eb7e213e92848415cee\">◆&nbsp;<\/a><\/span>sl_icm20648_enter_low_power_mode()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_enter_low_power_mode <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>enAccel, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>enGyro, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>enTemp&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Enable or disable sensors in low-power mode in the ICM20648 chip. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>enAccel<\/code><\/td><td>If true, enables the acceleration sensor in low power mode<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>enGyro<\/code><\/td><td>If true, enables the gyroscope sensor in low power mode<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>enTemp<\/code><\/td><td>If true, enables the temperature sensor in low power mode<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga9de38d49d802f680b8cc30ef1184283a\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga9de38d49d802f680b8cc30ef1184283a\">◆&nbsp;<\/a><\/span>sl_icm20648_enable_interrupt()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_enable_interrupt <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>dataReadyEnable, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>womEnable&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Enable or disable the interrupts in the ICM20648 chip. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>dataReadyEnable<\/code><\/td><td>If true, enables the Raw Data Ready interrupt, otherwise disables.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>womEnable<\/code><\/td><td>If true, enables the Wake-up On Motion interrupt, otherwise disables.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga53c01d5e4ac50499a5183376fc6ffbbc\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga53c01d5e4ac50499a5183376fc6ffbbc\">◆&nbsp;<\/a><\/span>sl_icm20648_read_interrupt_status()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_read_interrupt_status <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint32_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>int_status<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read the interrupt status registers of the ICM20648 chip. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>int_status<\/code><\/td><td>The content the four interrupt registers. LSByte is INT_STATUS, MSByte is INT_STATUS_3<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga77a359a6c031569a996fe3806e106be4\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga77a359a6c031569a996fe3806e106be4\">◆&nbsp;<\/a><\/span>sl_icm20648_is_data_ready()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">bool sl_icm20648_is_data_ready <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">void&nbsp;<\/td>\n          <td class=\"paramname\"><code><\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Check if new data is available to read. <\/p>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns true if the Raw Data Ready interrupt bit set, false otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaa9cf1c5a0182afa3977ef3172810a863\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaa9cf1c5a0182afa3977ef3172810a863\">◆&nbsp;<\/a><\/span>sl_icm20648_enable_wake_on_motion_interrupt()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_enable_wake_on_motion_interrupt <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">bool&nbsp;<\/td>\n          <td class=\"paramname\"><code>enable, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>womThreshold, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">float&nbsp;<\/td>\n          <td class=\"paramname\"><code>sampleRate&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set up and enable the Wake-up On Motion feature. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>enable<\/code><\/td><td>If true enables the WOM feature, disables otherwise<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>womThreshold<\/code><\/td><td>Threshold value for the Wake on Motion Interrupt for ACCEL x/y/z axes. LSB = 4mg. Range is 0mg to 1020mg<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>sampleRate<\/code><\/td><td>The desired sample rate of the accel sensor in Hz<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gab7e4a09dfc0810915d7cefc924cab9ad\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gab7e4a09dfc0810915d7cefc924cab9ad\">◆&nbsp;<\/a><\/span>sl_icm20648_init()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_init <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">void&nbsp;<\/td>\n          <td class=\"paramname\"><code><\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Initialize the ICM20648 sensor. <\/p>\n<p>Enable the power supply and SPI lines, set up the host SPI controller, configure the chip control interface, clock generator, and interrupt line.<\/p>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gadcc90f1950f624f974dd26dfa5d539e9\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gadcc90f1950f624f974dd26dfa5d539e9\">◆&nbsp;<\/a><\/span>sl_icm20648_deinit()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_deinit <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">void&nbsp;<\/td>\n          <td class=\"paramname\"><code><\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>De-initialize the ICM20648 sensor by disconnecting the supply and SPI lines. <\/p>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga1902e16546e684356d21196b1181e41d\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga1902e16546e684356d21196b1181e41d\">◆&nbsp;<\/a><\/span>sl_icm20648_calibrate_accel_and_gyro()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_calibrate_accel_and_gyro <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>accelBiasScaled, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyroBiasScaled&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Accelerometer and gyroscope calibration function. <\/p>\n<p>Reads the gyroscope and accelerometer values while the device is at rest and in level. The resulting values are loaded to the accel and gyro bias registers to cancel the static offset error.<\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>accelBiasScaled<\/code><\/td><td>The mesured acceleration sensor bias in mg<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>gyroBiasScaled<\/code><\/td><td>The mesured gyro sensor bias in deg/sec<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaae92c4a2d4c2b34c690b266770f4fea2\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaae92c4a2d4c2b34c690b266770f4fea2\">◆&nbsp;<\/a><\/span>sl_icm20648_calibrate_gyro()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_calibrate_gyro <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>gyroBiasScaled<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Gyroscope calibration function. <\/p>\n<p>Read the gyroscope values while the device is at rest and in level. The resulting values are loaded to the gyro bias registers to cancel the static offset error.<\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>gyroBiasScaled<\/code><\/td><td>The mesured gyro sensor bias in deg/sec<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gace368e8ee1fb2efd9f5e850b57470668\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gace368e8ee1fb2efd9f5e850b57470668\">◆&nbsp;<\/a><\/span>sl_icm20648_read_temperature_data()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_read_temperature_data <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">float *&nbsp;<\/td>\n          <td class=\"paramname\"><code>temperature<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read the temperature sensor raw value and convert to Celsius. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>temperature<\/code><\/td><td>The mesured temperature in Celsius<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaeb7c4a0a835dcb1a769bd386eb9c5377\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaeb7c4a0a835dcb1a769bd386eb9c5377\">◆&nbsp;<\/a><\/span>sl_icm20648_get_device_id()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_icm20648_get_device_id <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">uint8_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>devID<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read the device ID of the ICM20648. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>devID<\/code><\/td><td>The ID of the device read from the WHO_AM_I register. Expected value 0xE0.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Returns zero on OK, non-zero otherwise <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<\/div>\n      <div ub-in-page=\"6062051aebaf71079a7b414b\"><\/div>\n      <\/article>\n    ","url":"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-icm20648","status":"success"}
