{"html":"\n      <article>\n        <p class=\"banner\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-ccs811\" target=\"_blank\" title=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-ccs811\">Open in Browser<\/a><\/p><div class=\"header\">\n  \n  <div class=\"headertitle\">\n  <h1 class=\"title\">CCS811 - Gas Sensor<\/h1><\/div>\n<\/div><!--header-->\n<div class=\"contents\">\n<a name=\"details\" id=\"details\"><\/a><h2 class=\"groupheader\">Description<\/h2>\n<p>Driver for the Cambridge CMOS Sensors CCS811 gas and indoor air quality sensor. <\/p>\n<p><br>\n <\/p>\n<h1><a class=\"anchor\" id=\"ccs811-example\"><\/a>\nCCS811 usage example code<\/h1>\n<p>Basic example for initializing measuring equivalent Co2 and TVOC level. <\/p><pre class=\"fragment\">#include \"sl_i2cspm_instances.h\"\n#include \"sl_ccs811.h\"\n\nint main( void )\n{\n\n  ...\n\n  // Initialize sensor and set measure mode\n  sl_ccs811_init(sl_i2cspm_sensor_gas);\n  sl_ccs811_set_measure_mode(sl_i2cspm_sensor_gas, CCS811_MEASURE_MODE_DRIVE_MODE_1SEC);\n\n  uint16_t eco2;\n  uint16_t tvoc;\n\n  while (true) {\n\n    if ( sl_ccs811_is_data_available(sl_i2cspm_sensor_gas) ) {\n      sl_ccs811_get_measurement(sl_i2cspm_sensor_gas, &amp;eco2, &amp;tvoc);\n    }\n\n    ...\n\n  }\n\n} <\/pre> <table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"groups\"><\/a>\nModules<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemRight\" valign=\"bottom\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-ccs811-details\" class=\"\" target=\"_blank\">CCS881 - Gas Sensor Details<\/a><\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescRight\">CCS881 register interface. <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table><table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"func-members\"><\/a>\nFunctions<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga754b422b75c528d6953ac27f6a5d2b65\" class=\"el\">sl_ccs811_init<\/a> (sl_i2cspm_t *i2cspm)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Initialize the chip.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gabf2900ec30917a96457a7d11c42e1adf\" class=\"el\">sl_ccs811_deinit<\/a> (sl_i2cspm_t *i2cspm)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">De-initialize the chip.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga48cd13ff22b87b574090ea3abd197095\" class=\"el\">sl_ccs811_get_hardware_id<\/a> (sl_i2cspm_t *i2cspm, uint8_t *hwID)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Reads Hardware ID from the CCS811 sensor.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gac815ad215d19cc461a1ea7153023de87\" class=\"el\">sl_ccs811_set_measure_mode<\/a> (sl_i2cspm_t *i2cspm, uint8_t measMode)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Set the measurement mode of the CCS811 sensor.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga6a2f16df5585136fe6a8d2d3d820efc7\" class=\"el\">sl_ccs811_update_firmware<\/a> (sl_i2cspm_t *i2cspm, const uint8_t *firmware, uint32_t length)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Perform a firmware update of the CCS811 sensor.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga4c002d416cc9e057a07c306527f3770a\" class=\"el\">sl_ccs811_read_firmware_version<\/a> (sl_i2cspm_t *i2cspm, uint16_t *fw_version)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read out current firmware of the CCS811 sensor.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gafa31010e4a8338a5ad6eaa2cd94a81bd\" class=\"el\">sl_ccs811_get_status<\/a> (sl_i2cspm_t *i2cspm, uint8_t *status)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read the status of the CCS811 sensor.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga21608b3160217af5848b80d19e5f4a45\" class=\"el\">sl_ccs811_read_mailbox<\/a> (sl_i2cspm_t *i2cspm, uint8_t id, uint8_t length, uint8_t *data)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read data from a specific Mailbox address.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga69b3fdb1e66a8c607ab8fc91fbb708e8\" class=\"el\">sl_ccs811_start_application<\/a> (sl_i2cspm_t *i2cspm)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Switch the CCS811 chip from boot to application mode.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaebd95de92a551397a8464b01e4ca2648\" class=\"el\">sl_ccs811_software_reset<\/a> (sl_i2cspm_t *i2cspm)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Perform software reset on the CCS811.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">bool&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga546587c7d85db3f445af00b2492428fb\" class=\"el\">sl_ccs811_is_data_available<\/a> (sl_i2cspm_t *i2cspm)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Check whether new measurement data is available.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga2e945beed58d54b4cd3db4b87bf22b2e\" class=\"el\">sl_ccs811_get_measurement<\/a> (sl_i2cspm_t *i2cspm, uint16_t *eco2, uint16_t *tvoc)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Read measurement data (eCO2 and TVOC) from the CCS811 sensor.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga503b049f19bf01cda850d2a3ad84a8d4\" class=\"el\">sl_ccs811_get_raw_data<\/a> (sl_i2cspm_t *i2cspm, uint16_t *current, uint16_t *rawData)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Get the latest readings from the sense resistor of the CCS811 sensor.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga5da1fd3dcc09ede350175974144c7fc8\" class=\"el\">sl_ccs811_set_env_data<\/a> (sl_i2cspm_t *i2cspm, int32_t tempData, uint32_t rhData)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Write temperature and humidity values to the environmental data regs.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table>\n<h2 class=\"groupheader\">Function Documentation<\/h2>\n<a id=\"ga754b422b75c528d6953ac27f6a5d2b65\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga754b422b75c528d6953ac27f6a5d2b65\">â—†&nbsp;<\/a><\/span>sl_ccs811_init()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_init <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Initialize the chip. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_INITIALIZATION<\/code><\/td><td>Initialization was unsuccessful <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gabf2900ec30917a96457a7d11c42e1adf\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gabf2900ec30917a96457a7d11c42e1adf\">â—†&nbsp;<\/a><\/span>sl_ccs811_deinit()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_deinit <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>De-initialize the chip. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga48cd13ff22b87b574090ea3abd197095\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga48cd13ff22b87b574090ea3abd197095\">â—†&nbsp;<\/a><\/span>sl_ccs811_get_hardware_id()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_get_hardware_id <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint8_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>hwID&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Reads Hardware ID from the CCS811 sensor. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>hwID<\/code><\/td><td>The Hardware ID of the chip (should be 0x81)<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_TRANSMIT<\/code><\/td><td>I2C transmission error <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gac815ad215d19cc461a1ea7153023de87\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gac815ad215d19cc461a1ea7153023de87\">â—†&nbsp;<\/a><\/span>sl_ccs811_set_measure_mode()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_set_measure_mode <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>measMode&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Set the measurement mode of the CCS811 sensor. <\/p>\n<p>This function must be called before reading measurements from the sensor.<\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>measMode<\/code><\/td><td>The desired measurement mode<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_TRANSMIT<\/code><\/td><td>I2C transmission error <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga6a2f16df5585136fe6a8d2d3d820efc7\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga6a2f16df5585136fe6a8d2d3d820efc7\">â—†&nbsp;<\/a><\/span>sl_ccs811_update_firmware()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_update_firmware <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">const uint8_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>firmware, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint32_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>length&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Perform a firmware update of the CCS811 sensor. <\/p>\n<p>This function overwrites the existing firmware, irrespective of the version number.<\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>firmware<\/code><\/td><td>A buffer containing the contents of the firmware update<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>length<\/code><\/td><td>The length of the firmware update array<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Firmware upgrade successful <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_FAIL<\/code><\/td><td>Firmware upgrade failed <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga4c002d416cc9e057a07c306527f3770a\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga4c002d416cc9e057a07c306527f3770a\">â—†&nbsp;<\/a><\/span>sl_ccs811_read_firmware_version()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_read_firmware_version <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint16_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>fw_version&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read out current firmware of the CCS811 sensor. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The i2cspm instance to use<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>fw_version<\/code><\/td><td>The current application firmware. The top 4 bits contain the major firmware version, the next 4 bits contain the minor and the last 8 bits contain the patch version.<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_TRANSMIT<\/code><\/td><td>I2C transmission error <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gafa31010e4a8338a5ad6eaa2cd94a81bd\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gafa31010e4a8338a5ad6eaa2cd94a81bd\">â—†&nbsp;<\/a><\/span>sl_ccs811_get_status()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_get_status <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint8_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>status&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read the status of the CCS811 sensor. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>status<\/code><\/td><td>The content of the CCS811 Status Register<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_TRANSMIT<\/code><\/td><td>I2C transmission error <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga21608b3160217af5848b80d19e5f4a45\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga21608b3160217af5848b80d19e5f4a45\">â—†&nbsp;<\/a><\/span>sl_ccs811_read_mailbox()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_read_mailbox <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>id, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint8_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>length, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint8_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>data&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read data from a specific Mailbox address. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>id<\/code><\/td><td>The address of the Mailbox register<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>length<\/code><\/td><td>The number of bytes to read<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>data<\/code><\/td><td>The data read from the sensor<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_TRANSMIT<\/code><\/td><td>I2C transmission error <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga69b3fdb1e66a8c607ab8fc91fbb708e8\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga69b3fdb1e66a8c607ab8fc91fbb708e8\">â—†&nbsp;<\/a><\/span>sl_ccs811_start_application()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_start_application <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Switch the CCS811 chip from boot to application mode. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_TRANSMIT<\/code><\/td><td>I2C transmission failure <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_NOT_AVAILABLE<\/code><\/td><td>Application firmware is not present in the CCS811 device <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_INVALID_STATE<\/code><\/td><td>Chip firmware did not switch to application mode <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaebd95de92a551397a8464b01e4ca2648\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaebd95de92a551397a8464b01e4ca2648\">â—†&nbsp;<\/a><\/span>sl_ccs811_software_reset()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_software_reset <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Perform software reset on the CCS811. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_TRANSMIT<\/code><\/td><td>I2C transmission error <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga546587c7d85db3f445af00b2492428fb\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga546587c7d85db3f445af00b2492428fb\">â—†&nbsp;<\/a><\/span>sl_ccs811_is_data_available()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">bool sl_ccs811_is_data_available <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Check whether new measurement data is available. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>True if new data available, otherwise false <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga2e945beed58d54b4cd3db4b87bf22b2e\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga2e945beed58d54b4cd3db4b87bf22b2e\">â—†&nbsp;<\/a><\/span>sl_ccs811_get_measurement()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_get_measurement <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint16_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>eco2, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint16_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>tvoc&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Read measurement data (eCO2 and TVOC) from the CCS811 sensor. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>eco2<\/code><\/td><td>The equivalent CO2 level (in ppm) read from the sensor<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>tvoc<\/code><\/td><td>The TVOC level (in ppb) read from the sensor<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_TRANSMIT<\/code><\/td><td>I2C transmission error <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga503b049f19bf01cda850d2a3ad84a8d4\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga503b049f19bf01cda850d2a3ad84a8d4\">â—†&nbsp;<\/a><\/span>sl_ccs811_get_raw_data()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_get_raw_data <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint16_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>current, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint16_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>rawData&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Get the latest readings from the sense resistor of the CCS811 sensor. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>current<\/code><\/td><td>The value of current through the sensor<\/td><\/tr>\n    <tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>rawData<\/code><\/td><td>The raw ADC reading of the voltage across the sensor with the selected current<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_TRANSMIT<\/code><\/td><td>I2C transmission error <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga5da1fd3dcc09ede350175974144c7fc8\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga5da1fd3dcc09ede350175974144c7fc8\">â—†&nbsp;<\/a><\/span>sl_ccs811_set_env_data()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_ccs811_set_env_data <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">sl_i2cspm_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>i2cspm, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">int32_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>tempData, <\/code><\/td>\n        <\/tr>\n        <tr>\n          <td class=\"paramkey\"><\/td>\n          <td><\/td>\n          <td class=\"paramtype\">uint32_t&nbsp;<\/td>\n          <td class=\"paramname\"><code>rhData&nbsp;<\/code><\/td>\n        <\/tr>\n        <tr>\n          <td><\/td>\n          <td>)<\/td>\n          <td><\/td><td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Write temperature and humidity values to the environmental data regs. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>i2cspm<\/code><\/td><td>The I2CSPM instance to use.<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>tempData<\/code><\/td><td>The environmental temperature in milliCelsius<\/td><\/tr>\n    <tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>rhData<\/code><\/td><td>The relative humidity in millipercent<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd><\/dd><\/dl>\n<dl class=\"retval\"><dt>Return values<\/dt><dd>\n  <table class=\"retval\">\n    <tbody><tr><td class=\"paramname\"><code>SL_STATUS_OK<\/code><\/td><td>Success <\/td><\/tr>\n    <tr><td class=\"paramname\"><code>SL_STATUS_TRANSMIT<\/code><\/td><td>I2C transmission error <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<\/div>\n      <div ub-in-page=\"6062051aebaf71079a7b414b\"><\/div>\n      <\/article>\n    ","url":"http://docs.silabs.com/gecko-platform/4.0/hardware-driver/api/group-ccs811","status":"success"}
