{"html":"\n      <article>\n        <p class=\"banner\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-button\" target=\"_blank\" title=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-button\">Open in Browser<\/a><\/p><div class=\"header\">\n  \n  <div class=\"headertitle\">\n  <h1 class=\"title\">Button API<\/h1><\/div>\n<\/div><!--header-->\n<div class=\"contents\">\n<a name=\"details\" id=\"details\"><\/a><h2 class=\"groupheader\">Description<\/h2>\n<p>Generic Button API. <\/p>\n<ul>\n<li><a href=\"#buttondrv-intro\" class=\"el\">Introduction<\/a> <\/li>\n<li><a href=\"#buttondrv-config\" class=\"el\">Configuration<\/a> <\/li>\n<li><a href=\"#buttondrv-usage\" class=\"el\">Usage<\/a><\/li>\n<\/ul>\n<p><br>\n <\/p>\n<h1><a class=\"anchor\" id=\"buttondrv-intro\"><\/a>\nIntroduction<\/h1>\n<p>The button driver is a platfom level software module that manages the initialization and reading of various types of buttons. There is currently one type of button supported by the button driver:<\/p>\n<ul>\n<li><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-simple-button\" class=\"el\" target=\"_blank\">Simple Button Driver<\/a><\/li>\n<\/ul>\n<p>All button functions are called through the generic driver, which then references functions in the simple button and other potential future button drivers.<\/p>\n<p><br>\n <\/p>\n<h1><a class=\"anchor\" id=\"buttondrv-config\"><\/a>\nConfiguration<\/h1>\n<p>All button instances are configured with an sl_button_t struct and a type specific context struct. These structs are automatically generated after a button is set up using Simplicity Studio's wizard, along with a function definition for initializing all LEDs of that type. Specific setup for the simple button is in the following section.<\/p>\n<ul>\n<li><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-simple-button#simple-button-config\" class=\"el\" target=\"_blank\">Simple Button Configuration<\/a><\/li>\n<\/ul>\n<p><br>\n <\/p>\n<h1><a class=\"anchor\" id=\"buttondrv-usage\"><\/a>\nUsage<\/h1>\n<p>Once the button structs are defined, the common button functions can be called being passed an instance of sl_button_t, which will be redirected to calling the type specific version of that function. The common functions include the following:<\/p>\n<ul>\n<li><a href=\"#ga2c50047c2f95bc1f2d880b67841a0b1c\" class=\"el\">sl_button_init<\/a> <\/li>\n<li><a href=\"#ga4986a64ee13725b5de660a32df395e5b\" class=\"el\">sl_button_get_state<\/a> <\/li>\n<li><a href=\"#gaa7c99118b75ec29182a8ab7c22ad55ea\" class=\"el\">sl_button_poll_step<\/a> <\/li>\n<li><a href=\"#gabb82d93087ee6200d429ca1da02984a4\" class=\"el\">sl_button_on_change<\/a><\/li>\n<\/ul>\n<p><a href=\"#ga2c50047c2f95bc1f2d880b67841a0b1c\" class=\"el\">sl_button_init<\/a> must be called before attempting to read the state of the button.<\/p>\n<p>The button driver can either be used with interrupt mode, polling or polling with debounce. In the case of using interrupt mode, <a href=\"#gabb82d93087ee6200d429ca1da02984a4\" class=\"el\">sl_button_on_change<\/a> can be implemented by the application if required. This function can contain functionality to be executed in response to button event or callbacks to appropriate functionality. In the case of polling and polling with debounce mode, <a href=\"#gaa7c99118b75ec29182a8ab7c22ad55ea\" class=\"el\">sl_button_poll_step<\/a> is used to update the state, and needs to be called from a tick function or similar by the user. These mode can be configured per button instance in the instance specific config file.<\/p>\n<p>Both the interrupt and polling methods obtain the button state for the user by calling <a href=\"#ga4986a64ee13725b5de660a32df395e5b\" class=\"el\">sl_button_get_state<\/a>. <\/p>\n<table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"groups\"><\/a>\nModules<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemRight\" valign=\"bottom\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-simple-button\" class=\"\" target=\"_blank\">Simple Button Driver<\/a><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table><table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"nested-classes\"><\/a>\nData Structures<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">struct &nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"http://docs.silabs.com/gecko-platform/4.0/driver/api/structsl-button\" class=\"el\" target=\"_blank\">sl_button_t<\/a><\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">A BUTTON instance.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table><table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"func-members\"><\/a>\nFunctions<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">sl_status_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga2c50047c2f95bc1f2d880b67841a0b1c\" class=\"el\">sl_button_init<\/a> (const sl_button_t *handle)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Button driver init.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\"><a href=\"#ga1e7966fc6eaedc85ad0449386ed0f3bc\" class=\"el\">sl_button_state_t<\/a>&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga4986a64ee13725b5de660a32df395e5b\" class=\"el\">sl_button_get_state<\/a> (const sl_button_t *handle)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Get button state.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gab0dfd93ce247b77ad7a8fadca002bd57\" class=\"el\">sl_button_enable<\/a> (const sl_button_t *handle)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Enable the button.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gacef888ab6ffe335bdcfef694e6bef17e\" class=\"el\">sl_button_disable<\/a> (const sl_button_t *handle)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Disable the button.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaa7c99118b75ec29182a8ab7c22ad55ea\" class=\"el\">sl_button_poll_step<\/a> (const sl_button_t *handle)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Poll the button.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">void&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gabb82d93087ee6200d429ca1da02984a4\" class=\"el\">sl_button_on_change<\/a> (const sl_button_t *handle)<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">A callback called in interrupt context whenever a button changes its state.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table><table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"define-members\"><\/a>\nMacros<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">#define&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#gaf35c160dede38b4a0c1c7ab94f9cf78f\" class=\"el\">BUTTON_ERROR<\/a>&nbsp;&nbsp;&nbsp;0xFFFF<\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">Error when trying to return state.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table><table class=\"memberdecls\">\n<tbody><tr class=\"heading\"><td colspan=\"2\"><h2 class=\"groupheader\"><a name=\"typedef-members\"><\/a>\nTypedefs<\/h2><\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">typedef uint8_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga6a325f6ffa905828f8667af4a3801bf3\" class=\"el\">sl_button_mode_t<\/a><\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">BUTTON mode.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<tr class=\"memitem\"><td class=\"memItemLeft\" align=\"right\" valign=\"top\">typedef uint8_t&nbsp;<\/td><td class=\"memItemRight\" valign=\"bottom\"><a href=\"#ga1e7966fc6eaedc85ad0449386ed0f3bc\" class=\"el\">sl_button_state_t<\/a><\/td><\/tr>\n<tr class=\"memdesc\"><td class=\"mdescLeft\">&nbsp;<\/td><td class=\"mdescRight\">BUTTON state.  <br><\/td><\/tr>\n<tr class=\"separator\"><td class=\"memSeparator\" colspan=\"2\">&nbsp;<\/td><\/tr>\n<\/tbody><\/table>\n<h2 class=\"groupheader\">Function Documentation<\/h2>\n<a id=\"ga2c50047c2f95bc1f2d880b67841a0b1c\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga2c50047c2f95bc1f2d880b67841a0b1c\">◆&nbsp;<\/a><\/span>sl_button_init()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">sl_status_t sl_button_init <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">const sl_button_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Button driver init. <\/p>\n<p>This function should be called before calling any other button function. Sets up the GPIO. Sets the mode of operation. Sets up the interrupts based on the mode of operation.<\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to button instance<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Status Code:<ul>\n<li>SL_STATUS_OK <\/li>\n<\/ul>\n<\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"ga4986a64ee13725b5de660a32df395e5b\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga4986a64ee13725b5de660a32df395e5b\">◆&nbsp;<\/a><\/span>sl_button_get_state()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\"><a href=\"#ga1e7966fc6eaedc85ad0449386ed0f3bc\" class=\"el\">sl_button_state_t<\/a> sl_button_get_state <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">const sl_button_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Get button state. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to button instance<\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n<dl class=\"section return\"><dt>Returns<\/dt><dd>Button state Current state of the button <\/dd><\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gab0dfd93ce247b77ad7a8fadca002bd57\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gab0dfd93ce247b77ad7a8fadca002bd57\">◆&nbsp;<\/a><\/span>sl_button_enable()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">void sl_button_enable <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">const sl_button_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Enable the button. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to button instance <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gacef888ab6ffe335bdcfef694e6bef17e\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gacef888ab6ffe335bdcfef694e6bef17e\">◆&nbsp;<\/a><\/span>sl_button_disable()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">void sl_button_disable <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">const sl_button_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Disable the button. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to button instance <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gaa7c99118b75ec29182a8ab7c22ad55ea\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaa7c99118b75ec29182a8ab7c22ad55ea\">◆&nbsp;<\/a><\/span>sl_button_poll_step()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">void sl_button_poll_step <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">const sl_button_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Poll the button. <\/p>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[in]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to button instance <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<a id=\"gabb82d93087ee6200d429ca1da02984a4\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gabb82d93087ee6200d429ca1da02984a4\">◆&nbsp;<\/a><\/span>sl_button_on_change()<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">void sl_button_on_change <\/td>\n          <td>(<\/td>\n          <td class=\"paramtype\">const sl_button_t *&nbsp;<\/td>\n          <td class=\"paramname\"><code>handle<\/code><\/td><td>)<\/td>\n          <td><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>A callback called in interrupt context whenever a button changes its state. <\/p>\n<dl class=\"section remark\"><dt>Remarks<\/dt><dd>Can be implemented by the application if required. This function can contain the functionality to be executed in response to changes of state in each of the buttons, or callbacks to appropriate functionality.<\/dd><\/dl>\n<dl class=\"section note\"><dt>Note<\/dt><dd>The button state should not be updated in this function, it is updated by specific button driver prior to arriving here<\/dd><\/dl>\n<dl class=\"params\"><dt>Parameters<\/dt><dd>\n  <table class=\"params\">\n    <tbody><tr><td class=\"paramdir\">[out]<\/td><td class=\"paramname\"><code>handle<\/code><\/td><td>Pointer to button instance <\/td><\/tr>\n  <\/tbody><\/table>\n  <\/dd>\n<\/dl>\n\n<\/div>\n<\/div>\n<h2 class=\"groupheader\">Macro Definition Documentation<\/h2>\n<a id=\"gaf35c160dede38b4a0c1c7ab94f9cf78f\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#gaf35c160dede38b4a0c1c7ab94f9cf78f\">◆&nbsp;<\/a><\/span>BUTTON_ERROR<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">#define BUTTON_ERROR&nbsp;&nbsp;&nbsp;0xFFFF<\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>Error when trying to return state. <\/p>\n\n<\/div>\n<\/div>\n<h2 class=\"groupheader\">Typedef Documentation<\/h2>\n<a id=\"ga6a325f6ffa905828f8667af4a3801bf3\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga6a325f6ffa905828f8667af4a3801bf3\">◆&nbsp;<\/a><\/span>sl_button_mode_t<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">typedef uint8_t <a href=\"#ga6a325f6ffa905828f8667af4a3801bf3\" class=\"el\">sl_button_mode_t<\/a><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>BUTTON mode. <\/p>\n\n<\/div>\n<\/div>\n<a id=\"ga1e7966fc6eaedc85ad0449386ed0f3bc\"><\/a>\n<h2 class=\"memtitle\"><span class=\"permalink\"><a href=\"#ga1e7966fc6eaedc85ad0449386ed0f3bc\">◆&nbsp;<\/a><\/span>sl_button_state_t<\/h2>\n\n<div class=\"memitem\">\n<div class=\"memproto\">\n      <table class=\"memname\">\n        <tbody><tr>\n          <td class=\"memname\">typedef uint8_t <a href=\"#ga1e7966fc6eaedc85ad0449386ed0f3bc\" class=\"el\">sl_button_state_t<\/a><\/td>\n        <\/tr>\n      <\/tbody><\/table>\n<\/div><div class=\"memdoc\">\n\n<p>BUTTON state. <\/p>\n\n<\/div>\n<\/div>\n<\/div>\n      <div ub-in-page=\"6062051aebaf71079a7b414b\"><\/div>\n      <\/article>\n    ","url":"http://docs.silabs.com/gecko-platform/4.0/driver/api/group-button","status":"success"}
