/***************************************************************************//**
 * @file
 * @brief app_init.c
 *******************************************************************************
 * # License
 * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
 *******************************************************************************
 *
 * SPDX-License-Identifier: Zlib
 *
 * The licensor of this software is Silicon Laboratories Inc.
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would be
 *    appreciated but is not required.
 * 2. Altered source versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 * 3. This notice may not be removed or altered from any source distribution.
 *
 ******************************************************************************/

// -----------------------------------------------------------------------------
//                                   Includes
// -----------------------------------------------------------------------------
#include "app_log.h"
#include "sl_app_common.h"
#include "stack/include/ember.h"
#include "app_process.h"
#include "app_framework_common.h"
#include "sl_simple_led_instances.h"
#include "app_framework_common.h"
// -----------------------------------------------------------------------------
//                              Macros and Typedefs
// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
//                          Static Function Declarations
// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
//                                Global Variables
// -----------------------------------------------------------------------------

/// Data dump period  event control
extern EmberEventControl *data_report_control;

// -----------------------------------------------------------------------------
//                                Static Variables
// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
//                          Public Function Definitions
// -----------------------------------------------------------------------------
/******************************************************************************
* Application framework init callback
******************************************************************************/
void emberAfInitCallback(void)
{
  // CLI info message
  app_log_info("\nSink\n");

  EmberStatus status;
  while(emberNetworkInit() != EMBER_SUCCESS)
    {
      sl_sleeptimer_delay_millisecond(500);
      app_log_info("init Network status 0x%02X\n", status);
    }
 // emberResetNetworkState ();


    EmberNetworkParameters parameters;
    while(emberSetSecurityKey (&security_key) != EMBER_SUCCESS) {
        sl_sleeptimer_delay_millisecond(500);
        app_log_info("sec Network status 0x%02X\n", status);
    }

    sl_sleeptimer_delay_millisecond(500);
    MEMSET(&parameters, 0, sizeof(EmberNetworkParameters));
    parameters.radioTxPower = SENSOR_SINK_TX_POWER;
    parameters.radioChannel = 11;
    parameters.panId = SENSOR_SINK_PAN_ID;
  while( emberFormNetwork(&parameters) != EMBER_SUCCESS)
    {
      status = emberFormNetwork(&parameters);
      sl_sleeptimer_delay_millisecond(500);
      app_log_info("form Network status 0x%02X\n", status);
    }
  while( emberPermitJoining(255) != EMBER_SUCCESS)
    {
      sl_sleeptimer_delay_millisecond(500);
      app_log_info("pj Network status 0x%02X\n", status);
    }
    sl_led_turn_on(&sl_led_led0);
    emberCalibrateCurrentChannel();
#if defined(EMBER_AF_PLUGIN_BLE)
  bleConnectionInfoTableInit();
#endif
}

// -----------------------------------------------------------------------------
//                          Static Function Definitions
// -----------------------------------------------------------------------------
